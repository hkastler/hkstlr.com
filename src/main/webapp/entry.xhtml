
<ui:composition template="#{null eq request.getParameter('noTemplate')? '/templates/defaultTemplate.xhtml' : '/templates/clearTemplate.xhtml' }"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html">

	<ui:param name="msgKey"
		value="#{null ne request.getParameter('href') ? request.getParameter('href'): request.getQueryString()}" />
	<ui:param name="msgIndex" value="#{index.msgMap[msgKey]}" />
	<ui:param name="msg" value="#{index.msgs.get(msgIndex)}" />
	<ui:param name="baseHref"
		value="#{null ne request.getParameter('href') ? '/entry/': 'entry.xhtml?'}" />


	<!-- Page Content -->
	<ui:define name="title">#{index.config.props["site.name"]} - #{msg.subject}</ui:define>

	<ui:define name="content">
		<div id="content">
		
			<ui:include src="blogpost.xhtml" />

			<nav aria-label="Navigation" itemscope="itemscope"
				itemtype="https://schema.org/SiteNavigationElement">
				<div id="nav">
					<ui:fragment rendered="#{msgIndex gt 0}">

						<ui:param name="aMsg" value="#{index.msgs.get(msgIndex-1)}" />
						<a href="#{baseHref}#{aMsg.href}" class="btn btn-info"
							id="nav-prev"> <h:outputText
								value="&lt; #{aMsg.subject.substring(0, index.min(10,aMsg.subject.length()))}..." />
						</a>

					</ui:fragment>
					<ui:fragment rendered="#{msgIndex lt index.msgs.size()-1}">

						<ui:param name="aMsg" value="#{index.msgs.get(msgIndex+1)}" />
						<a href="#{baseHref}#{aMsg.href}" class="btn btn-info"
							id="nav-next"> <h:outputText
								value="#{aMsg.subject.substring(0, index.min(10,aMsg.subject.length()))}... &gt;" />
						</a>

					</ui:fragment>
				</div>
			</nav>
		</div>

	</ui:define>

	<ui:define name="postBody">
		<script>
			//this syntax successfully reattaches the click event
			//after the pagination container node gets rewritten by ajax
			$(document).on("click", "[ id |='nav' ] a", function(e) {
				
				try {
					e.preventDefault();
					e.stopImmediatePropagation();
				} catch (err) {
					//do nothing
				}

				var disabledValue = $(this).attr("data-disabled");

				if (disabledValue === "true" || disabledValue === "disabled") {
					return false;
				}

				var myHref = $(this).attr("href");
				var label = "";

				try {
					$.ajax({
						type : 'GET',
						url : myHref + "?noTemplate=1",
						async : true,
						success : function(response) {
							try {																
								var html = $.parseHTML(response); 								
								var newcontent = $(html).filter('#content').html();
								$('#content').html(newcontent);
								var newtitle = $(html).find("#msgSubject").text();
								//console.log(newtitle);
								
								document.title = newtitle;
								
							} catch (err) {
								//do nothing
							}
						},
						error : function() {
							//do nothing
						}
					});

					window.history.pushState({url : myHref}, label, myHref);
					if (document.title !== label) {
						document.title = label;
					}
				} catch (err) {
					window.location.href = myHref;
				}
			});

			
		</script>
	</ui:define>

	<!-- /.container -->
</ui:composition>